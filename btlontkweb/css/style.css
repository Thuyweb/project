* {
    margin:0; /* Đặt lề cho tất cả các phần tử là 0 */
    padding:0; /* Đặt đệm cho tất cả các phần tử là 0 */
    box-sizing: border-box; /* Bao gồm cả viền và padding trong kích thước của phần tử */
    font-family: Arial, Helvetica, sans-serif; /* Thiết lập font chữ mặc định cho toàn trang */
}

header {
    display: flex; /* Sử dụng Flexbox để bố trí các phần tử con trong header */
    justify-content: space-between; /* Căn đều khoảng cách giữa các phần tử, đẩy chúng về hai phía */
    padding: 12px 50px; /* Thêm khoảng cách trong header (12px trên/dưới, 50px trái/phải) */
    height: 70px; /* Chiều cao của header là 70px */
    align-items: center; /* Căn giữa các phần tử theo chiều dọc */
    position: fixed; /* Giữ header cố định khi cuộn trang */
    top: 0; /* Đặt header ở trên cùng của trang */
    left: 0; /* Đặt header ở bên trái */
    width: 100%; /* Header chiếm toàn bộ chiều rộng của trang */
    z-index: 1; /* Đặt thứ tự lớp của header để nằm trên các phần tử khác */
    background: rgba(255, 255, 255, 0.3); /* Màu nền trắng mờ 30% */
}

header.sticky {
    background: rgba(255, 255, 255, 1); /* Khi header có lớp sticky, nền sẽ chuyển thành trắng không trong suốt */
}

header:hover {
    background: rgba(255, 255, 255, 1); /* Khi di chuột vào header, nền sẽ chuyển sang trắng không trong suốt */
}

li {
  list-style: none; /* Bỏ các dấu chấm trước các mục trong danh sách */
}

a {
    text-decoration: none; /* Bỏ gạch chân dưới liên kết */
    color: #000; /* Đặt màu chữ cho liên kết là màu đen */
}

.logo {
    flex: 1; /* Cho logo chiếm 1 phần của Flexbox */
}

.menu {
    flex: 3; /* Menu chiếm 3 phần của Flexbox */
    display: flex; /* Sử dụng Flexbox để căn chỉnh các mục trong menu */
}

.menu > li {
    padding: 0 12px; /* Thêm khoảng cách giữa các mục trong menu */
    position: relative; /* Đặt vị trí tương đối để có thể định vị sub-menu */
}

.menu > li a {
    font-size: 15px; /* Kích thước chữ của liên kết trong menu là 15px */
    font-weight: bold!important; /* Chữ in đậm */
    display: block; /* Liên kết là một khối */
    line-height: 20px; /* Chiều cao của dòng chữ là 20px */
    padding: 10px 10px; /* Khoảng cách bên trong liên kết là 10px */
}

.menu li:hover .sub-menu {
    visibility: visible; /* Khi di chuột vào mục menu, sub-menu sẽ hiện ra */
    top: 50px; /* Vị trí của sub-menu sẽ cách 50px từ trên xuống */
}

.sub-menu {
    position: absolute; /* Đặt vị trí tuyệt đối cho sub-menu */
    width: 150px; /* Chiều rộng của sub-menu là 150px */
    border: 1px solid #ccc; /* Viền của sub-menu là màu xám nhạt */
    padding: 10px 0 10px 20px; /* Thêm đệm trong sub-menu */
    visibility: hidden; /* Sub-menu mặc định sẽ bị ẩn */
    top: 60px; /* Đặt vị trí của sub-menu cách trên 60px */
    transition: 0.3s; /* Thêm hiệu ứng chuyển đổi trong 0.3 giây */
    z-index: 1; /* Đặt sub-menu lên trên các phần tử khác */
    background: #fff; /* Nền của sub-menu là màu trắng */
}

.sub-menu ul {
    padding-left: 20px; /* Thụt lề 20px cho danh sách trong sub-menu */
}

.sub-menu li a {
    font-size: 12px; /* Kích thước chữ trong sub-menu là 12px */
}

.sub-menu li ul a {
    font-weight: normal; /* Chữ không in đậm trong menu con */
    font-size: 12px!important; /* Kích thước chữ là 12px và quan trọng */
}

.others {
    flex: 1; /* Khối "others" chiếm 1 phần của Flexbox */
    display: flex; /* Sử dụng Flexbox để căn chỉnh các phần tử bên trong */
}

.others > li {
    padding: 0 12px; /* Thêm đệm giữa các mục trong khối "others" */
    position: relative; /* Đặt vị trí tương đối để có thể dùng pseudo-element */
}

.others > li::after {
    content:""; /* Tạo một pseudo-element */
    display: block; /* Hiển thị pseudo-element như một khối */
    width: 1px; /* Chiều rộng của pseudo-element là 1px */
    height: 50%; /* Chiều cao của pseudo-element là 50% */
    background: #cccccc; /* Màu nền của pseudo-element là màu xám nhạt */
    position: absolute; /* Đặt vị trí tuyệt đối cho pseudo-element */
    right: 0; /* Đặt pseudo-element ở bên phải */
    top: 50%; /* Đặt pseudo-element ở giữa theo chiều dọc */
    transform: translateY(-50%); /* Điều chỉnh để căn giữa pseudo-element theo chiều dọc */
}

.others > li:last-child::after {
    display: none; /* Bỏ pseudo-element ở mục cuối cùng của khối "others" */
}

.others > li:first-child  {
    position: relative; /* Đặt vị trí tương đối cho mục đầu tiên */
}

.others > li:first-child input {
    width: 100%; /* Đặt chiều rộng của input là 100% */
    border: none; /* Bỏ viền */
    border-bottom: 1px solid #333; /* Thêm viền dưới màu đen */
    background: transparent; /* Đặt nền trong suốt */
    outline: none; /* Bỏ đường viền khi focus */
}

.others > li:first-child i {
    position: absolute; /* Đặt vị trí tuyệt đối cho icon trong mục đầu tiên */
    right: 10px; /* Đặt icon cách phải 10px */
}

/* slider */
#slider {
    padding-bottom: 30px; /* Khoảng cách dưới cho slider là 30px */
    border-bottom: 2px solid #000; /* Đường viền dưới của slider là 2px màu đen */
    overflow: hidden; /* Ẩn các phần tử tràn ra khỏi slider */
}

.slider-container {
    display: flex; /* Sử dụng Flexbox để căn chỉnh các ảnh trong slider */
    position: relative; /* Đặt vị trí tương đối cho slider */
    padding-top: 56.25%; /* Tạo tỉ lệ chiều cao so với chiều rộng (16:9) cho slider */
    transition: 0.3s; /* Thêm hiệu ứng chuyển đổi trong 0.3 giây */
}

.slider-container img {
    display: block; /* Hiển thị ảnh dưới dạng block */
    position: absolute; /* Đặt vị trí tuyệt đối cho ảnh */
    width: 100%; /* Ảnh chiếm 100% chiều rộng slider */
    height: 100%; /* Ảnh chiếm 100% chiều cao slider */
    top: 0; /* Đặt ảnh ở trên cùng của slider */
    left: 0; /* Đặt ảnh ở bên trái slider */
}

/* dot */
.dot-container {
    position: absolute; /* Đặt vị trí tuyệt đối cho khối chứa dot */
    height: 30px; /* Chiều cao của khối chứa dot là 30px */
    width: 100%; /* Chiều rộng của khối chứa dot là 100% */
    display: flex; /* Sử dụng Flexbox để căn giữa các dot */
    align-items: center; /* Căn giữa dot theo chiều dọc */
    text-align: center; /* Căn giữa nội dung trong khối chứa */
    justify-content: center; /* Căn giữa các dot trong dot container */
}
.dot {
    height: 16px; /* Chiều cao của chấm là 16px */
    width: 16px; /* Chiều rộng của chấm là 16px */
    background-color: #ccc; /* Màu nền của chấm là màu xám nhạt (#ccc) */
    border-radius: 50%; /* Biến chấm thành hình tròn bằng cách làm tròn các cạnh */
    margin-right: 12px; /* Khoảng cách bên phải của chấm là 12px */
    cursor: pointer; /* Khi rê chuột qua chấm, con trỏ sẽ chuyển sang dạng tay chỉ */
}
.dot.active {
    background-color: #333; /* Khi chấm có class "active", màu nền sẽ chuyển thành màu xám đậm (#333) */
}

/* app */
.app-container {
    text-align: center; /* Căn giữa nội dung trong container */
    align-items: center; /* Căn giữa các phần tử con theo chiều dọc */
    padding: 150px 0 50px 0; /* Đệm 150px ở trên, 50px ở dưới, và không có đệm ở bên trái và bên phải */
}
.app-google {
    margin: 50px; /* Khoảng cách xung quanh khối app-google là 50px */
}

.app-google img {
    height: 50px; /* Chiều cao của hình ảnh trong khối app-google là 50px */
    cursor: pointer; /* Khi rê chuột qua hình ảnh, con trỏ sẽ chuyển sang dạng tay chỉ */
}
.app-container p {
    line-height: 20px; /* Chiều cao dòng của các đoạn văn là 20px */
    letter-spacing: 1px; /* Khoảng cách giữa các chữ cái là 1px */
    font-size: 17px; /* Kích thước chữ là 17px */
    color: #000; /* Màu chữ là màu đen */
    font-weight: bold; /* Chữ in đậm */
}
.app-container input {
    margin-top: 50px; /* Khoảng cách trên của ô nhập liệu là 50px */
    border: none; /* Không có đường viền */
    border-bottom: 1px solid #000; /* Đường viền bên dưới là 1px màu đen */
    padding-bottom: 20px; /* Đệm bên dưới ô nhập liệu là 20px */
    width: 400px; /* Chiều rộng của ô nhập liệu là 400px */
    text-align: center; /* Căn giữa nội dung trong ô nhập liệu */
    outline: none; /* Không hiển thị viền khi ô nhập liệu được chọn */
}

/* footer */
footer {
    text-align: center; /* Căn giữa nội dung trong footer */
}
.footer-top {
    display: flex; /* Sử dụng flexbox để bố trí các phần tử con */
    text-align: center; /* Căn giữa nội dung trong footer-top */
    justify-content: center; /* Căn giữa các phần tử con theo chiều ngang */
    align-items: center; /* Căn giữa các phần tử con theo chiều dọc */
    margin-bottom: 20px; /* Khoảng cách bên dưới của footer-top là 20px */
    height: 70px; /* Chiều cao của footer-top là 70px */
}
.footer-top img {
    height: 50px; /* Chiều cao của hình ảnh trong footer-top là 50px */
}
.footer-top li {
    padding: 0 12px; /* Đệm bên trái và bên phải của mỗi mục là 12px */
    position: relative; /* Đặt vị trí tương đối cho mỗi mục */
}
.footer-top li::after {
    content:""; /* Thêm một phần tử sau mỗi mục */
    display: block; /* Hiển thị phần tử sau dưới dạng khối */
    width: 1px; /* Chiều rộng của phần tử sau là 1px */
    height: 80%; /* Chiều cao của phần tử sau là 80% chiều cao của mục */
    background: #cccccc; /* Màu nền của phần tử sau là màu xám nhạt (#cccccc) */
    position: absolute; /* Đặt vị trí tuyệt đối cho phần tử sau */
    right: 0; /* Đưa phần tử sau sang bên phải của mục */
    top: 50%; /* Đặt phần tử sau ở giữa theo chiều dọc của mục */
    transform: translateY(-50%); /* Dịch chuyển phần tử sau lên một nửa chiều cao của nó để căn giữa hoàn toàn */
}
.footer-top li:last-child::after {
    display: none; /* Ẩn phần tử sau của mục cuối cùng */
}
.footer-top li:last-child a {
    margin-right: 12px; /* Khoảng cách bên phải của liên kết trong mục cuối cùng là 12px */
    color: #333; /* Màu chữ của liên kết trong mục cuối cùng là màu xám đậm (#333) */
}
.footer-center {
    text-align: center; /* Căn giữa nội dung trong footer-center */
}
.footer-bottom {
    margin: 20px 0; /* Khoảng cách trên và dưới của footer-bottom là 20px */
    text-align: center; /* Căn giữa nội dung trong footer-bottom */
}
.success-dialog {
    display: none; /* Không hiển thị hộp thoại thành công theo mặc định */
    position: fixed; /* Đặt vị trí của hộp thoại thành công là cố định trên màn hình */
    top: 50%; /* Đưa hộp thoại xuống giữa màn hình theo chiều dọc */
    left: 50%; /* Đưa hộp thoại sang giữa màn hình theo chiều ngang */
    transform: translate(-50%, -50%); /* Dịch chuyển hộp thoại lên và sang trái một nửa chiều rộng và chiều cao của nó để căn giữa hoàn toàn */
    background: #fff; /* Màu nền của hộp thoại thành công là màu trắng */
    padding: 20px; /* Đệm bên trong hộp thoại thành công là 20px */
    border: 2px solid #ccc; /* Đường viền của hộp thoại thành công là 2px màu xám nhạt */
    z-index: 1000; /* Đặt chỉ số z cho hộp thoại thành công là 1000, giúp nó nằm trên các phần tử khác */
}
